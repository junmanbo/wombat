"""add timezone

Revision ID: 9b8db78ecf16
Revises: 8225c4a7de6f
Create Date: 2025-10-25 08:27:50.363850

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9b8db78ecf16'
down_revision = '8225c4a7de6f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('exchange', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('pricedata', 'timestamp',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('pricedata', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.drop_index('idx_price_data_symbol_time', table_name='pricedata')
    op.create_index('idx_price_data_symbol_time', 'pricedata', ['symbol_id', 'timestamp'], unique=False, postgresql_ops={'timestamp': 'DESC'})
    op.drop_index('idx_price_data_timeframe', table_name='pricedata')
    op.create_index('idx_price_data_timeframe', 'pricedata', ['timeframe', 'timestamp'], unique=False, postgresql_ops={'timestamp': 'DESC'})
    op.alter_column('symbol', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('symbol', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('userapikey', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('userapikey', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('userapikey', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('userapikey', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('symbol', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('symbol', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.drop_index('idx_price_data_timeframe', table_name='pricedata', postgresql_ops={'timestamp': 'DESC'})
    op.create_index('idx_price_data_timeframe', 'pricedata', ['timeframe', sa.text('timestamp DESC')], unique=False)
    op.drop_index('idx_price_data_symbol_time', table_name='pricedata', postgresql_ops={'timestamp': 'DESC'})
    op.create_index('idx_price_data_symbol_time', 'pricedata', ['symbol_id', sa.text('timestamp DESC')], unique=False)
    op.alter_column('pricedata', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('pricedata', 'timestamp',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('exchange', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    # ### end Alembic commands ###
